/* CUSF mainchain wallet service */

syntax = "proto3";
package cusf.mainchain.v1;

import "google/protobuf/wrappers.proto";

import "cusf/mainchain/v1/common.proto";

service WalletService {
  rpc BroadcastWithdrawalBundle(BroadcastWithdrawalBundleRequest)
    returns (BroadcastWithdrawalBundleResponse);
  rpc CreateBmmCriticalDataTransaction(CreateBmmCriticalDataTransactionRequest)
    returns (CreateBmmCriticalDataTransactionResponse);
  rpc CreateDepositTransaction(CreateDepositTransactionRequest)
    returns (CreateDepositTransactionResponse);
  rpc CreateNewAddress(CreateNewAddressRequest)
    returns (CreateNewAddressResponse);
  // Regtest only
  rpc GenerateBlocks(GenerateBlocksRequest)
    returns (GenerateBlocksResponse);
  rpc Ripemd160(Ripemd160Request)
    returns (Ripemd160Response);
  rpc HmacSha512(HmacSha512Request)
    returns (HmacSha512Response);
}

message BroadcastWithdrawalBundleRequest {
  google.protobuf.UInt32Value sidechain_id = 1;
  google.protobuf.BytesValue transaction = 2;
}
message BroadcastWithdrawalBundleResponse {
}

message CreateBmmCriticalDataTransactionRequest {
  google.protobuf.UInt32Value sidechain_id = 1;
  google.protobuf.UInt64Value value_sats = 2;
  google.protobuf.UInt32Value height = 3;
  ConsensusHex critical_hash = 4;
  ReverseHex prev_bytes = 5;
}
message CreateBmmCriticalDataTransactionResponse {
  ConsensusHex txid = 1;
}

message CreateDepositTransactionRequest {
  uint32 sidechain_id = 1;
  string address = 2;
  uint64 value_sats = 3;
  uint64 fee_sats = 4;
}
message CreateDepositTransactionResponse {
  ConsensusHex txid = 1;
}

message CreateNewAddressRequest {
}

message CreateNewAddressResponse {
  string address = 1;
}

message GenerateBlocksRequest {
  google.protobuf.UInt32Value blocks = 1;
}
message GenerateBlocksResponse {
}

message Ripemd160Request {
    ConsensusHex message = 1;
}
message Ripemd160Response {
    ConsensusHex hash = 1;
}

message HmacSha512Request {
    ConsensusHex secret = 1;
    ConsensusHex message = 2;
}
message HmacSha512Response {
    ConsensusHex hash = 1;
}
