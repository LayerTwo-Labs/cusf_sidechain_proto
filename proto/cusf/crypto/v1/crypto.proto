/* CUSF crypto service */

syntax = "proto3";
package cusf.crypto.v1;

import "cusf/common/v1/common.proto";

service CryptoService {
  rpc HmacSha512(HmacSha512Request)
    returns (HmacSha512Response);
  rpc Ripemd160(Ripemd160Request)
    returns (Ripemd160Response);
  rpc Secp256k1SecretKeyToPublicKey(Secp256k1SecretKeyToPublicKeyRequest)
    returns (Secp256k1SecretKeyToPublicKeyResponse);
  rpc Secp256k1Sign(Secp256k1SignRequest)
    returns (Secp256k1SignResponse);
  rpc Secp256k1Verify(Secp256k1VerifyRequest)
    returns (Secp256k1VerifyResponse);
}

message HmacSha512Request {
  cusf.common.v1.ConsensusHex key = 1;
  cusf.common.v1.ConsensusHex msg = 2;
}
message HmacSha512Response {
  cusf.common.v1.ConsensusHex hmac = 1;
}

message Ripemd160Request {
  cusf.common.v1.ConsensusHex msg = 1;
}
message Ripemd160Response {
  cusf.common.v1.ConsensusHex digest = 1;
}

message Secp256k1SecretKeyToPublicKeyRequest {
  cusf.common.v1.ConsensusHex secret_key = 1;
}
message Secp256k1SecretKeyToPublicKeyResponse {
  cusf.common.v1.ConsensusHex public_key = 1;
}

message Secp256k1SignRequest {
  cusf.common.v1.ConsensusHex message = 1;
  cusf.common.v1.ConsensusHex secret_key = 2;
}
message Secp256k1SignResponse {
  cusf.common.v1.ConsensusHex signature = 1;
}

message Secp256k1VerifyRequest {
  cusf.common.v1.ConsensusHex message = 1;
  cusf.common.v1.ConsensusHex signature = 2;
  cusf.common.v1.ConsensusHex public_key = 3;
}
message Secp256k1VerifyResponse {
  bool valid = 1;
}
